Main.java
import java.util.*;
import java.util.concurrent.TimeUnit;
import java.io.*;
import java.text.DateFormat;
import java.text.ParseException;

public class Main {
    public static void main(String[] args) throws FileNotFoundException, ParseException {
        Scanner sc = new Scanner(new File("KHACH.in"));
        int T = Integer.parseInt(sc.nextLine());
        ArrayList<khach> list = new ArrayList<>();
        for (int t = 1; t <= T; t++) {
            khach k = new khach(t, sc.nextLine(), sc.nextLine(), sc.nextLine(), sc.nextLine());
            list.add(k);
        }
        Collections.sort(list);
        for (khach k : list)
            System.out.println(k.toString());
        sc.close();
    }
}
khach.java
import java.util.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;

public class khach implements Comparable<khach> {
    private String id, name, room_id;
    Date day_in;
    Date day_go;
    private int day;

    public khach(int id_in, String name, String room_id, String den, String di) throws ParseException {
        if (id_in < 10)
            id = String.format("%02d", id_in);
        else
            id = String.valueOf(id_in);
        this.name = name;
        this.room_id = room_id;
        this.day_go = new SimpleDateFormat("dd/MM/yyyy").parse(den);
        this.day_in = new SimpleDateFormat("dd/MM/yyyy").parse(di);
        day = (int) ((this.day_in.getTime() - this.day_go.getTime()) / (1000 * 60 * 60 * 24));
    }

    public int getDay() {
        return day;
    }

    public Date getDay_in() {
        return day_in;
    }

    @Override
    public int compareTo(khach o) {
        if (this.day > o.getDay())
            return -1;
        if (this.day == o.getDay()) {
            String d1 = day_in + "";
            String d2 = o.getDay_in() + "";
            return d1.compareTo(d2);
        }
        return 1;
    }

    @Override
    public String toString() {
        return "KH" + id + " " + name + " " + room_id + " " + day;
    }
}

